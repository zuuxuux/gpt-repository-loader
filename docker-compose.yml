services:
  # MySQL test DB
  test-db:
    image: mysql:8
    # environment, healthcheck, etc.
  
  # "app" which is the same container you just built
  app:
    build: .
    ports:
      - "5000:5000"
    depends_on:
      - test-db
    environment:
      MYSQL_HOST: test-db
      MYSQL_USER: root
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: noovox
    command: >
      bash -c "
        /app/scripts/wait-for test-db:3306 --timeout=60 &&
        python app.py
      "

  # "test" service for python tests
  test:
    build: .
    depends_on:
      - test-db
    environment:
      MYSQL_HOST: test-db
      MYSQL_USER: root
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: noovox
    command: >
      bash -c "
        /app/backend/scripts/wait-for db:3306 --timeout=60 -- echo 'DB is up!' &&

        mysql -h $$MYSQL_HOST -u $$MYSQL_USER -p$$MYSQL_PASSWORD $$MYSQL_DATABASE < /app/backend/noovox/db_schema.sql &&
        
        pytest -s --capture=no backend/tests &&
        PYTEST_EXIT=$$? &&
        if [ $$PYTEST_EXIT -ne 0 ]; then
          echo 'Pytest failed. Exiting...' &&
          exit $$PYTEST_EXIT;
        fi &&

        cd /app/frontend &&
        python /app/backend/noovox/server.py &
        cd /app &&
        echo 'Backend started, wait for it' &&
        /app/backend/scripts/wait-for localhost:5000 --timeout=60 -- echo 'Backend is up!' &&

        echo 'Running frontend tests (Playwright)...' &&
        cd /app/frontend &&
        npx playwright test &&
        PLAYWRIGHT_EXIT=$$? &&
        if [ $$PYTEST_EXIT -ne 0 ]; then
          echo 'Playwright tests failed. Exiting...' &&
          exit $$PLAYWRIGHT_EXIT;
        fi &&

        echo 'All tests passed!' &&
        exit 0
      "